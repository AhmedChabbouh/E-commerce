{% extends 'base.html.twig' %}

{% block title %}Your Cart{% endblock %}

{% block stylesheets %}
    <style>
        .cart-container {
            margin-top: 50px;
        }

        .cart-table {
            background-color: #ffffff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .cart-table thead th {
            background-color: #5cb85c;
            color: #ffffff;
            text-align: center;
            vertical-align: middle;
        }

        .cart-table td {
            vertical-align: middle;
            text-align: center;
        }

        .product-image {
            width: 230px;
            height: 230px;
            object-fit: cover;
            border-radius: 8px;
            margin: 10px;
        }

        .low-stock {
            color: red;
            font-weight: bold;
        }

        .total-row td {
            border-top: 2px solid #dee2e6;
            font-weight: bold;
            background-color: #f8f9fa;
        }

        .btn-checkout {
            white-space: nowrap;
        }

        @media (max-width: 768px) {
            .product-image {
                width: 100%;
                height: auto;
            }

            .cart-table thead {
                display: none;
            }

            .cart-table tbody td {
                display: block;
                width: 100%;
                text-align: left;
                padding: 1rem;
                border-bottom: 1px solid #dee2e6;
            }

            .cart-table tbody td:last-child {
                border-bottom: none;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container cart-container">
        <h2 class="mb-4 text-center">Your Shopping Cart</h2>

        <div class="table-responsive">
            <table class="table cart-table">
                <thead>
                <tr>
                    <th colspan="2">Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                </tr>
                </thead>
                <tbody>
                {% for product in products %}
                    <tr id="{{ product.getId() }}" class="product-id">
                        <td>
                            <img class="product-image" src="{{ product.getImage() }}" alt="{{ product.getName() }}">
                        </td>
                        <td>
                            {% if not isAnimal[product.getId()] and product.getStockQuantity() < 10 %}
                                <p class="low-stock">Only {{ product.getStockQuantity() }} left in stock!</p>
                            {% endif %}
                            {% if isAnimal[product.getId()] %}
                                <p class="low-stock">This is an animal, you can only buy one!</p>
                            {% endif %}
                            <h5>{{ product.getName() }}</h5>
                            <p>{{ product.getDescription() }}</p>
                        </td>
                        <td>{{ product.getPrice() }} $</td>
                        <td>
                            <input class="quantity form-control text-center"
                                   type="number"
                                   min="0"
                                   max="{{ isAnimal[product.getId()] ? 1 : product.getStockQuantity() }}"
                                   value="{{ quantity[product.getId()] }}">
                        </td>
                    </tr>
                {% endfor %}
                <tr class="total-row">
                    <td colspan="2" class="text-end">Total Price:</td>
                    <td id="total-price"></td>
                    <td>
                        <a href="{{ path('checkout', {'cartId': cart_id}) }}"
                           id="confirm"
                           class="btn btn-outline-success btn-checkout">
                            Confirm Purchase
                        </a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const quantities = document.querySelectorAll('.quantity');
            const prices = Array.from(document.querySelectorAll('.price'));
            const totalPrice = document.getElementById('total-price');
            const images = Array.from(document.querySelectorAll('.product-image'));
            const names = Array.from(document.querySelectorAll('h5'));
            const ids = Array.from(document.querySelectorAll('.product-id'));

            function updateTotal() {
                let total = 0;
                quantities.forEach((quantityInput, index) => {
                    const quantity = parseInt(quantityInput.value) || 0;
                    const priceText = ids[index].querySelector('td:nth-child(3)').textContent.trim().replace('$', '');
                    const price = parseFloat(priceText);
                    total += quantity * price;
                });
                totalPrice.textContent = total.toFixed(2) + ' $';
            }

            quantities.forEach((quantityInput, index) => {
                quantityInput.addEventListener('change', () => {
                    if (quantityInput.value == 0) {
                        Swal.fire({
                            html: images[index].cloneNode().outerHTML,
                            title: `Do you want to remove ${names[index].textContent} from your cart?`,
                            showCancelButton: true,
                            confirmButtonText: 'Yes',
                            cancelButtonText: 'No',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const productId = ids[index].id;
                                fetch(`/cart/remove/${productId}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    }
                                }).then(() => {
                                    ids[index].remove();
                                    updateTotal();
                                });
                            } else {
                                quantityInput.value = 1;
                                updateTotal();
                            }
                        });
                    } else {
                        const productId = ids[index].id;
                        fetch(`/cart/changeQuantity/${productId}/${quantityInput.value}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        updateTotal();
                    }
                });
            });

            updateTotal();
        });
    </script>
{% endblock %}
